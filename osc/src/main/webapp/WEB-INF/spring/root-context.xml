<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx 
  	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
   	http://www.springframework.org/schema/util
  	http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	<util:properties id="db" location="classpath:/properties/#{systemProperties['spring.profiles.active']}/db.properties" />
	<util:properties id="config" location="classpath:/properties/#{systemProperties['spring.profiles.active']}/config.properties" />
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="#{db['jdbc.driver']}"/>
		<property name="url" value="#{db['jdbc.url']}"/>
		<property name="username" value="#{db['jdbc.username']}"/>
		<property name="password" value="#{db['jdbc.password']}"/>
		<property name="initialSize" value="5" />
		<property name="maxActive" value="50" />
		<property name="maxIdle" value="50" />
		<property name="minIdle" value="20" />
		<property name="maxWait" value="2000" />
	</bean>
	
    <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="dataSourceSpied" />
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="loggingType" value="MULTI_LINE" />
                <property name="sqlPrefix" value="[SQL] : "/>
            </bean>
        </property>
    </bean>
    
    <!-- 
    	SqlSessionTemplate 은 myBatis 디폴트 구현체인 org.apache.ibatis.session.defaults.DefaultSqlSession 대신 항상 사용된다.
		SqlSessionTemplate 클래스내에 SqlSession 인터페이스 타입의 proxy클래스가 존재한다. 
		왜냐하면 템플릿은 스프링 트랜잭션의 일부처럼 사용될 수 있고 여러개 주입된 매퍼 클래스에 의해 사용되도록 쓰레드에 안전하다. 
		동일한 애플리케이션에서 두개의 클래스간의 전환은 데이터 무결성 이슈를 야기할수 있다.
     -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="dataSource" />
  		<property name="mapperLocations" value="classpath:/sqlmap/*.xml" />
  		<property name="configLocation" value="/WEB-INF/spring/mybatis-config.xml" />
	</bean>
     
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> 
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
<!-- 	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean> -->
	
	<!-- 
		myBatis는 아래와 같은 설정을 통해 basePackage 속성에 등록된 패키지 하위의 interface를 자동으로 Mapper로 인식하게 된다.
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="com.osc.work.mapper" />
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- 
	수동으로 properties 파일을 사용	
	<bean id="config" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:/config/properties/#{systemProperties['spring.profiles.active']}/config.properties</value>
			</list>
		</property>
	</bean> -->
	
</beans>
